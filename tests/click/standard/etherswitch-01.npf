%info
EtherSwitch performances

Simple performance test generating packets with InfiniteSource and sending them to EtherSwitch to test performances

Explanations about the test :
TOTGEN defines the number of generator for each run, it is 2, 4, ...

For each run, the late_variables section generate 1 to TOTGEN lines of generator.

Each line of generator is an infinitesource with ip address ending with :line_number to :line_number + 1

%config
//Script is time-based on 3s, so if it is longer than 10s, there is a bug somewhere
timeout=10
//Accept 4% changes
acceptable=0.04
var_names={BURST:Burst,LENGTH:Length,result:Throughput,TOTGEN:Number of L2 flows}
var_unit={BURST:Packets,LENGTH:Bytes,result:BPS}
n_runs=10
default_repo=click
accept_variance=2

%variables
LENGTH=64
TOTGEN=[2*128]
BURST=32

%late_variables
NGEN=[0-127]
GEN=EXPAND(eth[${NGEN}] -> gen${NGEN} :: Generator(52:54:56:58:$(( format($NGEN, 'x') )):$(( format($NGEN, 'x') )), 52:54:56:58:$(( format(($NGEN + 1) % $TOTGEN, 'x') )):$(( format(($NGEN + 1) % $TOTGEN, 'x') )) ) -> [${NGEN}]eth;gen${NGEN}[1] -> ac)
GENS=HEAD($TOTGEN,$GEN)
NGEN=
GEN=

%script
click -j 1 CONFIG

%file CONFIG
elementclass Generator { $SRC, $DST |
is :: InfiniteSource(LENGTH $LENGTH, BURST $BURST)
    -> EtherEncap(0x0800, $SRC, $DST)
    -> ReplayUnqueue(STOP 1000, QUICK_CLONE 1)
    -> [0]output;

input[0]
    -> [1]output;
}

eth::EtherSwitch();
ac :: AverageCounter -> Discard;

$GENS

finish :: Script(TYPE ACTIVE,
            wait 2s,
            print "NB packets : $(ac.count)",
			print "RESULT $(mul $(ac.byte_count) 8)",
			stop);
